openapi: 3.0.0
info:
  title: CLM development challenge
  description: "<b>Description:</b> This is the API documentation for the solution of the CLM development challenge by Javier Solsona."
  version: "1.0"
  contact:
    name:  Javier Solsona
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: Movies
paths:
  /api/movies/find/{movieTitle}:
    get:
      tags:
        - Movies 
      summary: Returns a movie stored in the Data Base.
      description: Receive a name in the URL and an optional year as parameter in header. If the movie is not found it's searched in an external API and stored in the local Data Base.
      operationId: Find a Movie
      parameters:
        - name: movieTitle
          in: path
          description: Movie Title
          required: true
          schema:
            type: string
            example: star%20wars
        - name: year
          in: header
          description: Movie year
          required: false
          schema:
            type: string
            example: 1977
      responses:
        "200":
          description: When a movie is finded
          content:
            application/json:
              schema:
                type: object
                properties:
                  Title:
                    type: string
                  Year:
                    type: string
                  Released:
                    type: string
                  Gnere:
                    type: string
                  Director:
                    type: string
                  Actors:
                    type: string
                  Pot:
                    type: string
                  Ratings:
                    type: array
                    items:
                      type: object
                      properties:
                          Source:
                            type: string
                          Value:
                            type: string
        "400":
          description: When external API return an error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: When movie is not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Error in data validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/movies/find-all:
    get:
      tags:
        - Movies 
      summary: Returns all movies paginated.
      description: Receive in the header the page to show.
      operationId: Find all movies paginates.
      parameters:
        - name: index
          in: header
          description: Page
          required: true
          schema:
            type: number
            example: 0
      responses:
        "200":
          description: List of movies
          content:
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    type: array
                    items:
                      type: object
                      properties:
                          Title:
                            type: string
                          Year:
                            type: string
                          Released:
                            type: string
                          Gnere:
                            type: string
                          Director:
                            type: string
                          Actors:
                            type: string
                          Pot:
                            type: string
                          Ratings:
                            type: array
                            items:
                              type: object
                              properties:
                                  Source:
                                    type: string
                                  Value:
                                    type: string
        "422":
          description: Error in data validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/movies/replace:
    post:
      tags:
        - Movies 
      summary: Returns a plot with text replaced.
      description: Receive in the body the movie to replace, the word to replace and the replace word.
      operationId: Replace a movie plot
      requestBody:
        description: Json with variables
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                movie:
                  type: string
                find:
                  type: string
                replace:
                  type: string
      responses:
        "200":
          description: Plot with replaced text.
          content:
            application/json:
              schema:
                type: object
                properties:
                  plot:
                    type: string
        "404":
          description: When movie is not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "422":
          description: Error in data validation
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string